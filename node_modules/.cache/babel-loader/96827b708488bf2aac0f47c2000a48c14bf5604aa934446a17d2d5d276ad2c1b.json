{"ast":null,"code":"import { mapState, mapGetters, mapMutations, mapActions, createLogger } from 'vuex';\nexport default {\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      itemsPerPage: 8\n    };\n  },\n  computed: {\n    ...mapGetters(['getFilteredCards']),\n    totalPages() {\n      return Math.ceil(this.getFilteredCards.length / this.itemsPerPage);\n    },\n    paginatedProducts() {\n      const pageNumber = this.getCurrentPageNumber();\n      const startIndex = (pageNumber - 1) * this.itemsPerPage;\n      const endIndex = startIndex + this.itemsPerPage;\n      return this.getFilteredCards.slice(startIndex, endIndex);\n    }\n  },\n  methods: {\n    getCurrentPageNumber() {\n      const pageNumberParam = parseInt(this.$route.params.pageNumber);\n      return isNaN(pageNumberParam) || pageNumberParam < 1 ? 1 : pageNumberParam;\n    },\n    getPageLink(pageNumber) {\n      return `/project/${pageNumber}`;\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapGetters","mapMutations","mapActions","createLogger","props","msg","String","data","itemsPerPage","computed","totalPages","Math","ceil","getFilteredCards","length","paginatedProducts","pageNumber","getCurrentPageNumber","startIndex","endIndex","slice","methods","pageNumberParam","parseInt","$route","params","isNaN","getPageLink"],"sources":["/Users/user/Desktop/GB/Vue/HWork/design-project/src/components/paginationComponent.vue"],"sourcesContent":["<template>\n  <div class=\"pagination\">\n    <button class=\"pagination__prev-btn\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"53\" height=\"52\"\n        viewBox=\"0 0 53 52\" fill=\"none\">\n        <circle cx=\"26.5\" cy=\"26\" r=\"25.5\" stroke=\"#CDA274\" />\n        <path d=\"M23.5571 32L29.5 25.3143L23.5571 18.6286\" stroke=\"#292F36\" stroke-width=\"2\" stroke-linecap=\"round\"\n          stroke-linejoin=\"round\" />\n      </svg></button>\n    <router-link v-if=\"totalPages > 1\" class=\"pagination__page-num\" v-for=\"pageNumber in totalPages\" :key=\"pageNumber\"\n      :to=\"getPageLink(pageNumber)\">\n      {{ pageNumber }}\n    </router-link>\n    <!-- <span class=\"pagination__page-num pagination__page-num_active\">01</span>\n    <span class=\"pagination__page-num\">02</span>\n    <span class=\"pagination__page-num\">03</span> -->\n    <button class=\"pagination__next-btn\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"53\" height=\"52\" viewBox=\"0 0 53 52\" fill=\"none\">\n        <circle cx=\"26.5\" cy=\"26\" r=\"25.5\" stroke=\"#CDA274\" />\n        <path d=\"M23.5571 32L29.5 25.3143L23.5571 18.6286\" stroke=\"#292F36\" stroke-width=\"2\" stroke-linecap=\"round\"\n          stroke-linejoin=\"round\" />\n      </svg></button>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters, mapMutations, mapActions, createLogger } from 'vuex'\n\nexport default {\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      itemsPerPage: 8,\n    }\n  },\n  computed: {\n    ...mapGetters(['getFilteredCards']),\n    totalPages() {\n      return Math.ceil(this.getFilteredCards.length / this.itemsPerPage)\n    },\n    paginatedProducts() {\n      const pageNumber = this.getCurrentPageNumber()\n      const startIndex = (pageNumber - 1) * this.itemsPerPage\n      const endIndex = startIndex + this.itemsPerPage\n      return this.getFilteredCards.slice(startIndex, endIndex)\n    },\n  },\n  methods: {\n    getCurrentPageNumber() {\n      const pageNumberParam = parseInt(this.$route.params.pageNumber)\n      return isNaN(pageNumberParam) || pageNumberParam < 1 ? 1 : pageNumberParam\n    },\n    getPageLink(pageNumber) {\n      return `/project/${pageNumber}`\n    },\n  },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"sass\">\n.pagination\n    display: flex\n    justify-content: center\n    gap: 2rem\n    &__prev-btn\n        transform: scale(-1,1)\n        width: 5.2rem\n        height: 5.2rem\n        border-radius: 50%\n        border: none\n        background: none\n    &__page-num\n        color: #292F36\n        font-family: Jost\n        font-size: 1.6rem\n        font-style: normal\n        font-weight: 500\n        line-height: 2.4rem\n        text-transform: capitalize\n\n        width: 5.2rem\n        height: 5.2rem\n        border: 1px solid #CDA274\n        border-radius: 50%\n\n        display: flex\n        justify-content: center\n        align-items: center\n        &_active\n            background: #F4F0EC\n            border: 1px solid #F4F0EC\n    &__next-btn\n        width: 5.2rem\n        height: 5.2rem\n        border: none\n        border-radius: 50%\n        background: none \n</style>\n"],"mappings":"AAyBA,SAASA,QAAQ,EAAEC,UAAU,EAAEC,YAAY,EAAEC,UAAU,EAAEC,YAAW,QAAS,MAAK;AAElF,eAAe;EACbC,KAAK,EAAE;IACLC,GAAG,EAAEC;EACP,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAChB;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGT,UAAU,CAAC,CAAC,kBAAkB,CAAC,CAAC;IACnCU,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACC,gBAAgB,CAACC,MAAK,GAAI,IAAI,CAACN,YAAY;IACnE,CAAC;IACDO,iBAAiBA,CAAA,EAAG;MAClB,MAAMC,UAAS,GAAI,IAAI,CAACC,oBAAoB,CAAC;MAC7C,MAAMC,UAAS,GAAI,CAACF,UAAS,GAAI,CAAC,IAAI,IAAI,CAACR,YAAW;MACtD,MAAMW,QAAO,GAAID,UAAS,GAAI,IAAI,CAACV,YAAW;MAC9C,OAAO,IAAI,CAACK,gBAAgB,CAACO,KAAK,CAACF,UAAU,EAAEC,QAAQ;IACzD;EACF,CAAC;EACDE,OAAO,EAAE;IACPJ,oBAAoBA,CAAA,EAAG;MACrB,MAAMK,eAAc,GAAIC,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACT,UAAU;MAC9D,OAAOU,KAAK,CAACJ,eAAe,KAAKA,eAAc,GAAI,IAAI,IAAIA,eAAc;IAC3E,CAAC;IACDK,WAAWA,CAACX,UAAU,EAAE;MACtB,OAAQ,YAAWA,UAAW;IAChC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}