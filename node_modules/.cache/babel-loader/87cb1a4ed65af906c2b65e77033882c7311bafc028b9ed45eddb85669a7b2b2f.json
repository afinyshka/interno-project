{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-85cd2dd2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"info-articles__tags\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"subheading m-b-24\"\n}, \"Tags\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"tags\"\n};\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.btnTags, btnTag => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: btnTag.id,\n      class: _normalizeClass([\"subtext tags__btn\", {\n        'tags__btn_active': $options.isSelected(btnTag)\n      }]),\n      onClick: $event => $options.selectTag(btnTag)\n    }, _toDisplayString(btnTag), 11 /* TEXT, CLASS, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$options","btnTags","btnTag","key","id","_normalizeClass","isSelected","onClick","$event","selectTag","_hoisted_4"],"sources":["/Users/user/Desktop/GB/Vue/HWork/design-project/src/components/tagButtons.vue"],"sourcesContent":["<template>\n  <div class=\"info-articles__tags\">\n    <h3 class=\"subheading m-b-24\">Tags</h3>\n    <div class=\"tags\">\n      <button v-for=\"btnTag in btnTags\" :key=\"btnTag.id\" class=\"subtext tags__btn\" @click=\"selectTag(btnTag)\"\n        :class=\"{ 'tags__btn_active': isSelected(btnTag) }\"> {{ btnTag }}</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n    }\n  },\n  methods: {\n    selectTag(tag) {\n      this.$store.dispatch('setSelectedTag', tag)\n    },\n    isSelected(tag) {\n      return this.$store.getters.selectedTag === tag\n    },\n  },\n\n  computed: {\n    btnTags() {\n      // Здесь можно получить теги из вашего хранилища или другого источника данных\n      return ['Kitchen', 'Bedroom', 'Building', 'Architecture', 'Kitchen Planning']\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"sass\">\n.tags\n    display: flex\n    flex-wrap: wrap\n    width: 33.5rem\n    align-items: flex-start\n    gap: 1.1rem\n    \n    &__btn\n        color: #292F36\n        text-align: center\n        font-family: Jost\n        font-size: 1.8rem\n        font-style: normal\n        font-weight: 400\n        line-height: 2.25rem\n        letter-spacing: 0.036rem\n        display: flex\n        padding: 0.9rem 3rem\n        justify-content: center\n        align-items: center\n        gap: 1rem\n        border-radius: 1rem\n        background: #F4F0EC\n        border: none\n        cursor: pointer\n        &_active\n            color: #FFF\n            background: #292F36\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAqB;gEAC9BC,mBAAA,CAAuC;EAAnCD,KAAK,EAAC;AAAmB,GAAC,MAAI;;EAC7BA,KAAK,EAAC;AAAM;;;uBAFnBE,mBAAA,CAMM,OANNC,UAMM,GALJC,UAAuC,EACvCH,mBAAA,CAGM,OAHNI,UAGM,I,kBAFJH,mBAAA,CAC4EI,SAAA,QAAAC,WAAA,CADnDC,QAAA,CAAAC,OAAO,EAAjBC,MAAM;yBAArBR,mBAAA,CAC4E;MADzCS,GAAG,EAAED,MAAM,CAACE,EAAE;MAAEZ,KAAK,EAAAa,eAAA,EAAC,mBAAmB;QAAA,oBAC5CL,QAAA,CAAAM,UAAU,CAACJ,MAAM;MAAA;MAD6BK,OAAK,EAAAC,MAAA,IAAER,QAAA,CAAAS,SAAS,CAACP,MAAM;wBAC3CA,MAAM,gCAAAQ,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}