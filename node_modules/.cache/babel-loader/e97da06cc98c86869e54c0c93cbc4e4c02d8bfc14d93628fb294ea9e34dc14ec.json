{"ast":null,"code":"import { mapActions, mapGetters, mapState } from 'vuex';\nexport default {\n  // props: {\n  //   pageKey: String,\n  // },\n  data() {\n    return {\n      pageNumber: 1\n    };\n  },\n  computed: {\n    ...mapState(['currentPage']),\n    ...mapGetters(['totalPages']),\n    pageKey() {\n      return this.$store.state.pageKey;\n    },\n    cardsPerPage() {\n      return this.$store.state.cardsPerPage;\n    }\n  },\n  methods: {\n    ...mapActions(['setCurrentPage', 'setPageKey', 'setCardsPerPage']),\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.setCurrentPage(this.currentPage - 1);\n      }\n    },\n    thisPage(pageNumber) {\n      this.setCurrentPage(pageNumber);\n      console.log('currentPage', this.currentPage, 'pageNumber', pageNumber);\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.setCurrentPage(this.currentPage + 1);\n      }\n    },\n    getPageLink(pageNumber) {\n      return `/${this.pageKey}/${pageNumber}`;\n    },\n    getPageLinkPrev() {\n      if (this.currentPage > 1) {\n        return `/${this.pageKey}/${this.currentPage - 1}`;\n      }\n    },\n    getPageLinkNext() {\n      if (this.currentPage < this.totalPages) {\n        return `/${this.pageKey}/${this.currentPage + 1}`;\n      }\n    },\n    updatePageKey() {\n      // Вызывайте действие для обновления значения в store\n      this.setPageKey(this.pageKey);\n      console.log('pagekey = ', this.pageKey);\n    },\n    updateCardsPerPage() {\n      // Вызывайте действие для обновления значения в store\n      this.setCardsPerPage(this.cardsPerPage);\n      console.log('cardsPerPage = ', this.cardsPerPage);\n    }\n  },\n  mounted() {\n    // Вызываем метод для обновления pageKey в store\n    this.updatePageKey();\n    this.updateCardsPerPage();\n  }\n};","map":{"version":3,"names":["mapActions","mapGetters","mapState","data","pageNumber","computed","pageKey","$store","state","cardsPerPage","methods","prevPage","currentPage","setCurrentPage","thisPage","console","log","nextPage","totalPages","getPageLink","getPageLinkPrev","getPageLinkNext","updatePageKey","setPageKey","updateCardsPerPage","setCardsPerPage","mounted"],"sources":["/Users/user/Desktop/GB/Vue/HWork/design-project/src/components/paginationComponent.vue"],"sourcesContent":["<template>\n  <div v-if=\"totalPages > 1\" class=\"pagination\">\n    <router-link @click=\"prevPage\" :disabled=\"currentPage === 1\" class=\"pagination__prev-btn\" :to=\"getPageLinkPrev()\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"53\" height=\"52\" viewBox=\"0 0 53 52\" fill=\"none\">\n        <circle cx=\"26.5\" cy=\"26\" r=\"25.5\" stroke=\"#CDA274\" />\n        <path d=\"M23.5571 32L29.5 25.3143L23.5571 18.6286\" stroke=\"#292F36\" stroke-width=\"2\" stroke-linecap=\"round\"\n          stroke-linejoin=\"round\" />\n      </svg></router-link>\n\n    <router-link @click=\"thisPage(pageNumber)\" class=\"pagination__page-num\" v-for=\"pageNumber in totalPages\"\n      :key=\"pageNumber\" :to=\"getPageLink(pageNumber)\"\n      :class=\"{ 'pagination__page-num_active': currentPage === pageNumber }\">\n      {{ pageNumber }}\n    </router-link>\n\n    <router-link @click=\"nextPage\" :disabled=\"currentPage === totalPages\" class=\"pagination__next-btn\"\n      :to=\"getPageLinkNext()\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"53\" height=\"52\" viewBox=\"0 0 53 52\"\n        fill=\"none\">\n        <circle cx=\"26.5\" cy=\"26\" r=\"25.5\" stroke=\"#CDA274\" />\n        <path d=\"M23.5571 32L29.5 25.3143L23.5571 18.6286\" stroke=\"#292F36\" stroke-width=\"2\" stroke-linecap=\"round\"\n          stroke-linejoin=\"round\" />\n      </svg></router-link>\n\n\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters, mapState } from 'vuex'\n\nexport default {\n  // props: {\n  //   pageKey: String,\n  // },\n  data() {\n    return {\n      pageNumber: 1,\n    }\n  },\n  computed: {\n    ...mapState(['currentPage']),\n    ...mapGetters(['totalPages']),\n    pageKey() {\n      return this.$store.state.pageKey\n    },\n    cardsPerPage() {\n      return this.$store.state.cardsPerPage\n    },\n  },\n  methods: {\n    ...mapActions(['setCurrentPage', 'setPageKey', 'setCardsPerPage']),\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.setCurrentPage(this.currentPage - 1);\n      }\n    },\n    thisPage(pageNumber) {\n      this.setCurrentPage(pageNumber)\n      console.log('currentPage', this.currentPage, 'pageNumber', pageNumber)\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.setCurrentPage(this.currentPage + 1);\n      }\n    },\n    getPageLink(pageNumber) {\n      return `/${this.pageKey}/${pageNumber}`\n    },\n    getPageLinkPrev() {\n      if (this.currentPage > 1) {\n        return `/${this.pageKey}/${this.currentPage - 1}`\n      }\n    },\n    getPageLinkNext() {\n      if (this.currentPage < this.totalPages) {\n        return `/${this.pageKey}/${this.currentPage + 1}`\n      }\n    },\n    updatePageKey() {\n      // Вызывайте действие для обновления значения в store\n      this.setPageKey(this.pageKey)\n      console.log('pagekey = ', this.pageKey)\n    },\n    updateCardsPerPage() {\n      // Вызывайте действие для обновления значения в store\n      this.setCardsPerPage(this.cardsPerPage)\n      console.log('cardsPerPage = ', this.cardsPerPage)\n    },\n  },\n  mounted() {\n    // Вызываем метод для обновления pageKey в store\n    this.updatePageKey()\n    this.updateCardsPerPage()\n\n  },\n}\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"sass\">\n.pagination\n    display: flex\n    justify-content: center\n    gap: 2rem\n    &__prev-btn\n        transform: scale(-1,1)\n        width: 5.2rem\n        height: 5.2rem\n        border-radius: 50%\n        border: none\n        background: none\n    &__page-num\n        color: #292F36\n        font-family: Jost\n        font-size: 1.6rem\n        font-style: normal\n        font-weight: 500\n        line-height: 2.4rem\n        text-transform: capitalize\n        text-decoration: none\n\n        width: 5.2rem\n        height: 5.2rem\n        border: 1px solid #CDA274\n        border-radius: 50%\n\n        display: flex\n        justify-content: center\n        align-items: center\n        &_active\n            background: #F4F0EC\n            border: 1px solid #F4F0EC\n    &__next-btn\n        width: 5.2rem\n        height: 5.2rem\n        border: none\n        border-radius: 50%\n        background: none \n</style>\n"],"mappings":"AA4BA,SAASA,UAAU,EAAEC,UAAU,EAAEC,QAAO,QAAS,MAAK;AAEtD,eAAe;EACb;EACA;EACA;EACAC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE;IACd;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGH,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;IAC5B,GAAGD,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7BK,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,OAAM;IACjC,CAAC;IACDG,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,YAAW;IACtC;EACF,CAAC;EACDC,OAAO,EAAE;IACP,GAAGV,UAAU,CAAC,CAAC,gBAAgB,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;IAClEW,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACC,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACC,cAAc,CAAC,IAAI,CAACD,WAAU,GAAI,CAAC,CAAC;MAC3C;IACF,CAAC;IACDE,QAAQA,CAACV,UAAU,EAAE;MACnB,IAAI,CAACS,cAAc,CAACT,UAAU;MAC9BW,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE,IAAI,CAACJ,WAAW,EAAE,YAAY,EAAER,UAAU;IACvE,CAAC;IACDa,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACL,WAAU,GAAI,IAAI,CAACM,UAAU,EAAE;QACtC,IAAI,CAACL,cAAc,CAAC,IAAI,CAACD,WAAU,GAAI,CAAC,CAAC;MAC3C;IACF,CAAC;IACDO,WAAWA,CAACf,UAAU,EAAE;MACtB,OAAQ,IAAG,IAAI,CAACE,OAAQ,IAAGF,UAAW;IACxC,CAAC;IACDgB,eAAeA,CAAA,EAAG;MAChB,IAAI,IAAI,CAACR,WAAU,GAAI,CAAC,EAAE;QACxB,OAAQ,IAAG,IAAI,CAACN,OAAQ,IAAG,IAAI,CAACM,WAAU,GAAI,CAAE;MAClD;IACF,CAAC;IACDS,eAAeA,CAAA,EAAG;MAChB,IAAI,IAAI,CAACT,WAAU,GAAI,IAAI,CAACM,UAAU,EAAE;QACtC,OAAQ,IAAG,IAAI,CAACZ,OAAQ,IAAG,IAAI,CAACM,WAAU,GAAI,CAAE;MAClD;IACF,CAAC;IACDU,aAAaA,CAAA,EAAG;MACd;MACA,IAAI,CAACC,UAAU,CAAC,IAAI,CAACjB,OAAO;MAC5BS,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACV,OAAO;IACxC,CAAC;IACDkB,kBAAkBA,CAAA,EAAG;MACnB;MACA,IAAI,CAACC,eAAe,CAAC,IAAI,CAAChB,YAAY;MACtCM,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACP,YAAY;IAClD;EACF,CAAC;EACDiB,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACJ,aAAa,CAAC;IACnB,IAAI,CAACE,kBAAkB,CAAC;EAE1B;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}